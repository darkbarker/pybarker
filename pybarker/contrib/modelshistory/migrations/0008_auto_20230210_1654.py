# Generated by Django 3.2.12 on 2023-02-10 11:54

from django.db import migrations, models


# проверка что в данных нет пустых object_id и root_object_id (дальше мы делаем их not-null)
def check_object_id(apps, schema_editor):
    print("check object_id/root_object_id...")

    HistoryModelEntry = apps.get_model("modelshistory", "HistoryModelEntry")

    mhlogentries = HistoryModelEntry.objects.all()
    mhlogentries_count = mhlogentries.count()

    print("modelshistory all entries count:", mhlogentries_count)

    # null

    count = HistoryModelEntry.objects.filter(object_id__isnull=True).count()
    if count:
        raise Exception(f"object_id null count: {count}")

    count = HistoryModelEntry.objects.filter(root_object_id__isnull=True).count()
    if count:
        raise Exception(f"root_object_id null count: {count}")

    # empty

    count = HistoryModelEntry.objects.filter(object_id__exact="").count()
    if count:
        raise Exception(f"object_id empty count: {count}")

    count = HistoryModelEntry.objects.filter(root_object_id__exact="").count()
    if count:
        raise Exception(f"root_object_id empty count: {count}")


class Migration(migrations.Migration):

    dependencies = [
        ('modelshistory', '0007_rename_tag_historymodelentry_root_object_id'),
    ]

    operations = [
        migrations.RunPython(check_object_id),
        migrations.AlterField(
            model_name='historymodelentry',
            name='object_id',
            field=models.CharField(max_length=32),
        ),
        migrations.AlterField(
            model_name='historymodelentry',
            name='root_object_id',
            field=models.CharField(max_length=32),
        ),
    ]
